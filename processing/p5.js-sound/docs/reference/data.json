{
    "project": {
        "name": "p5.sound",
        "description": "",
        "version": "0.009",
        "url": ""
    },
    "files": {
        "src/amplitude.js": {
            "name": "src/amplitude.js",
            "modules": {},
            "classes": {
                "Amplitude": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/audioin.js": {
            "name": "src/audioin.js",
            "modules": {},
            "classes": {
                "AudioIn": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/env.js": {
            "name": "src/env.js",
            "modules": {},
            "classes": {
                "Env": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/fft.js": {
            "name": "src/fft.js",
            "modules": {},
            "classes": {
                "FFT": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/helpers.js": {
            "name": "src/helpers.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/lfo.js": {
            "name": "src/lfo.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/master.js": {
            "name": "src/master.js",
            "modules": {
                "p5.sound": 1
            },
            "classes": {},
            "fors": {
                "p5.sound": 1
            },
            "namespaces": {}
        },
        "src/noise.js": {
            "name": "src/noise.js",
            "modules": {},
            "classes": {
                "Noise": 1
            },
            "fors": {
                "Noise": 1
            },
            "namespaces": {}
        },
        "src/oscillator.js": {
            "name": "src/oscillator.js",
            "modules": {},
            "classes": {
                "Oscillator": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/pulse.js": {
            "name": "src/pulse.js",
            "modules": {},
            "classes": {
                "Pulse": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/sndcore.js": {
            "name": "src/sndcore.js",
            "modules": {},
            "classes": {},
            "fors": {
                "p5.sound": 1
            },
            "namespaces": {}
        },
        "src/soundfile.js": {
            "name": "src/soundfile.js",
            "modules": {},
            "classes": {
                "SoundFile": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/addons/p5.dom.js": {
            "name": "lib/addons/p5.dom.js",
            "modules": {
                "p5.dom": 1
            },
            "classes": {
                "p5.MediaElement": 1
            },
            "fors": {
                "p5.dom": 1,
                "p5.Element": 1
            },
            "namespaces": {}
        }
    },
    "modules": {
        "p5.sound": {
            "name": "p5.sound",
            "submodules": {},
            "classes": {
                "Amplitude": 1,
                "AudioIn": 1,
                "Env": 1,
                "FFT": 1,
                "Pulse": 1,
                "p5.sound": 1,
                "Noise": 1,
                "Oscillator": 1,
                "SoundFile": 1
            },
            "fors": {
                "p5.sound": 1,
                "Noise": 1
            },
            "namespaces": {},
            "module": "p5.sound",
            "file": "src/soundfile.js",
            "line": 8,
            "tag": "main",
            "itemtype": "main",
            "description": "p5.sound extends p5 with Web Audio functionality including audio input, playback, analysis and synthesis."
        },
        "p5.dom": {
            "name": "p5.dom",
            "submodules": {},
            "classes": {
                "p5.dom": 1,
                "p5.Element": 1,
                "p5.MediaElement": 1
            },
            "fors": {
                "p5.dom": 1,
                "p5.Element": 1
            },
            "namespaces": {},
            "module": "p5.dom",
            "file": "lib/addons/p5.dom.js",
            "line": 605,
            "description": "This is the p5.dom library.",
            "tag": "main",
            "itemtype": "main"
        }
    },
    "classes": {
        "Amplitude": {
            "name": "Amplitude",
            "shortname": "Amplitude",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "p5.sound",
            "file": "src/amplitude.js",
            "line": 5,
            "description": "Create an Amplitude object, which measures amplitude (volume)\nbetween 0.0 and 1.0. Accepts an optional smoothing value,\nwhich defaults to 0. Reads global p5sound output by default,\nor use setInput() to listen to a specific sound source.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "smoothing",
                    "description": "between 0.0 and .999 to smooth\n                           amplitude readings (defaults to 0)",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "Amplitude Object",
                "type": "Object"
            },
            "example": [
                "\n<div><code>\nfunction setup() { \n  mic = new AudioIn();\n  mic.on();\n  amplitude = new Amplitude();\n  amplitude.setInput(mic);\n}\nfunction draw() {\n  micLevel = amplitude.analyze();\n  ellipse(width/2, height - micLevel*height, 10, 10);\n}\n</code></div>"
            ]
        },
        "AudioIn": {
            "name": "AudioIn",
            "shortname": "AudioIn",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "p5.sound",
            "file": "src/audioin.js",
            "line": 6,
            "description": "<p>Generate an audio source from an input such as your computer's\nmicrophone.</p>\n \n<p>Some browsers let the client choose their input source,\nwhile others leave this to the application designer, and for this\nwe have the methods getSources() and setSoure().</p>\n\n<p>Turn the mic on/off with the on() and off() methods. When the mic\nis on, its volume can be measured with getLevel or by connecting an\nFFT object.</p>\n<p>If you want to hear the AudioIn, use the .connect() method. \n(AudioIn does not connect to p5.sound output by default to prevent\nfeedback).</p>",
            "is_constructor": 1,
            "return": {
                "description": "capture",
                "type": "Object"
            },
            "example": [
                "\n<div><code>\nmic = new AudioIn()\nmic.start();\nmic.connect(); // wear headphones or it may feedback!\n</code></div>"
            ]
        },
        "Env": {
            "name": "Env",
            "shortname": "Env",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "p5.sound",
            "file": "src/env.js",
            "line": 6,
            "description": "Envelopes are pre-defined amplitude distribution over time. \nTypically, envelopes are used to control the output volume\nof an object. This is the default behavior. However,\nEnvelopes can also be used to control any Web Audio Param.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "attackTime",
                    "description": "Time (in seconds) before level\n                               reaches attackLevel",
                    "type": "Number"
                },
                {
                    "name": "attackLevel",
                    "description": "Typically an amplitude between\n                               0.0 and 1.0",
                    "type": "Number"
                },
                {
                    "name": "decayTime",
                    "description": "Time (in seconds) before level\n                               reaches sustainLevel",
                    "type": "Number"
                },
                {
                    "name": "sustainLevel",
                    "description": "Typically an amplitude between\n                               0.0 and 1.0",
                    "type": "[Number]"
                },
                {
                    "name": "sustainTime",
                    "description": "Time (in seconds) to hold sustain,\n                               before release begins",
                    "type": "[Number]"
                },
                {
                    "name": "releaseTime",
                    "description": "Time before level reaches\n                               releaseLevel (or 0)",
                    "type": "[Number]"
                },
                {
                    "name": "releaseTime",
                    "description": "Release level (defaults to 0)",
                    "type": "[Number]"
                }
            ]
        },
        "FFT": {
            "name": "FFT",
            "shortname": "FFT",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "p5.sound",
            "file": "src/fft.js",
            "line": 6,
            "description": "Create an analyser node with optional variables for smoothing, \nfft size, min/max decibels. Decibels are in dBFS (0 is loudest),\nand will impact the range of your results.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "smoothing",
                    "description": "Smooth results of Freq Spectrum.\n                              0.0 < smoothing < 1.0.\n                              Defaults to 0.8.",
                    "type": "[Number]"
                },
                {
                    "name": "bands",
                    "description": "Must be a power of two between\n                           16 and 1024. Defaults to 1024.",
                    "type": "[Number]"
                }
            ],
            "return": {
                "description": "FFT Object",
                "type": "Object"
            }
        },
        "Pulse": {
            "name": "Pulse",
            "shortname": "Pulse",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "p5.sound",
            "file": "src/pulse.js",
            "line": 7,
            "description": "Creates a Pulse object, an oscillator that implements\nPulse Width Modulation.\nThe pulse is created with two oscillators.\nAccepts a parameter for frequency, and to set the\nwidth between the pulses.\n\nInspired by <a href=\"\nhttp://www.musicdsp.org/showone.php?id=8\">musicdsp.org\"</a>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "freq",
                    "description": "Frequency of the oscillator (1Hz by default)",
                    "type": "[Number]"
                },
                {
                    "name": "type",
                    "description": "Type of oscillator (defaults to 'sine')",
                    "type": "[String]"
                }
            ]
        },
        "p5.sound": {
            "name": "p5.sound",
            "shortname": "p5.sound",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "p5.sound",
            "submodule": "p5.sound",
            "namespace": ""
        },
        "Noise": {
            "name": "Noise",
            "shortname": "Noise",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "p5.sound",
            "namespace": "",
            "file": "src/noise.js",
            "line": 6,
            "description": "Noise is a type of oscillator that generates a buffer with random values.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "type",
                    "description": "Type of noise can be 'white' (default),\n                     'brown' or 'pink'.",
                    "type": "[type]"
                }
            ]
        },
        "Oscillator": {
            "name": "Oscillator",
            "shortname": "Oscillator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "p5.sound",
            "namespace": "",
            "file": "src/oscillator.js",
            "line": 6,
            "description": "<p>Creates a signal that oscillates between -1.0 and 1.0.\nBy default, the oscillation takes the form of a sinusoidal\nshape ('sine'). Additional types include 'triangle',\n'sawtooth' and 'square'. The frequency defaults to\n440 oscillations per second (440Hz, equal to the pitch of an\n'A' note).</p> \n\n<p>Set the type of oscillation  setType(), or by creating a\nspecific oscillator.</p> For example:\n<code>new SinOsc(freq)</code>\n<code>new TriOsc(freq)</code>\n<code>new SqrOsc(freq)</code>\n<code>new SawOsc(freq)</code>.\n</p>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "freq",
                    "description": "frequency defaults to 440Hz",
                    "type": "[Number]"
                },
                {
                    "name": "type",
                    "description": "type of oscillator. Options:\n                       'sine' (default), 'triangle',\n                       'sawtooth', 'square'",
                    "type": "[String]"
                }
            ]
        },
        "SoundFile": {
            "name": "SoundFile",
            "shortname": "SoundFile",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "p5.sound",
            "namespace": "",
            "file": "src/soundfile.js",
            "line": 8,
            "description": "<p>Create a SoundFile object with a path to a file.</p>\n\n<p>The SoundFile may not be available immediately because\nit loads the file information asynchronously.</p>\n\n<p>To do something with the sound as soon as it loads\npass the name of a function as the second parameter.</p>\n\n<p>Only one file path is required. However, audio file formats \n(i.e. mp3, ogg, wav and m4a/aac) are not supported by all\nweb browsers. If you want to ensure compatability, instead of a single\nfile path, you may include an Array of filepaths, and the browser will\nchoose a format that works.</p>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "path",
                    "description": "path to a sound file (String). Optionally,\n                             you may include multiple file formats in\n                             an array.",
                    "type": "String/Array"
                },
                {
                    "name": "callback",
                    "description": "Name of a function to call once file loads",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "SoundFile Object",
                "type": "Object"
            },
            "example": [
                " \n<div><code>\nfunction setup() {\n  mySound = new SoundFile(['mySound.mp3', 'mySound.ogg'], onload);\n}\n\nfunction onload() {\n  mySound.play();\n}\n</code></div>"
            ]
        },
        "p5.dom": {
            "name": "p5.dom",
            "shortname": "p5.dom",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "p5.dom",
            "submodule": "p5.dom",
            "namespace": ""
        },
        "p5.Element": {
            "name": "p5.Element",
            "shortname": "p5.Element",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "p5.dom",
            "submodule": "p5.dom",
            "namespace": ""
        },
        "p5.MediaElement": {
            "name": "p5.MediaElement",
            "shortname": "p5.MediaElement",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "p5.dom",
            "submodule": "p5.dom",
            "namespace": "",
            "file": "lib/addons/p5.dom.js",
            "line": 605,
            "description": "A class to describe...",
            "is_constructor": 1,
            "params": [
                {
                    "name": "elt",
                    "description": "DOM node that is wrapped",
                    "type": "String"
                },
                {
                    "name": "pInst",
                    "description": "pointer to p5 instance",
                    "type": "Object",
                    "optional": true
                }
            ]
        }
    },
    "classitems": [
        {
            "file": "src/amplitude.js",
            "line": 67,
            "description": "Connects to the p5sound instance (master output) by default.\nOptionally, you can pass in a specific source (i.e. a soundfile).",
            "itemtype": "method",
            "name": "setInput",
            "params": [
                {
                    "name": "snd",
                    "description": "set the sound source (optional, defaults to master output)",
                    "type": "SoundObject|undefined",
                    "optional": true
                },
                {
                    "name": "smoothing",
                    "description": "a range between 0.0 and .999 to smooth amplitude readings",
                    "type": "Number|undefined",
                    "optional": true
                }
            ],
            "example": [
                "\n<div><code>\nfunction preload(){\n  soundFile = loadSound('mySound.mp3');\n}\nfunction setup(){\n  amplitude = new Amplitude();\n  amplitude.setInput(soundFile);\n}\n</code></div>"
            ],
            "class": "Amplitude"
        },
        {
            "file": "src/amplitude.js",
            "line": 159,
            "description": "Returns a single Amplitude reading at the moment it is called.\nFor continuous readings, run in the draw loop.",
            "itemtype": "method",
            "name": "getLevel",
            "return": {
                "description": "Amplitude as a number between 0.0 and 1.0",
                "type": "Number"
            },
            "example": [
                "\n<div><code>\nfunction setup() { \n  amplitude = new Amplitude();\n}\nfunction draw() {\n  volume = amplitude.getLevel();\n}\n</code></div>"
            ],
            "class": "Amplitude"
        },
        {
            "file": "src/amplitude.js",
            "line": 184,
            "description": "Determines whether the results of Amplitude.process() will be Normalized.\nTo normalize, Amplitude finds the difference the loudest reading it has processed\nand the maximum amplitude of 1.0. Amplitude adds this difference to all values to produce\nresults that will reliably map between 0.0 and 1.0. \nHowever, if a louder moment occurs, the amount that Normalize adds to all the values will change.\n\nAccepts an optional boolean parameter (true or false).\nNormalizing is off by default.",
            "itemtype": "method",
            "name": "toggleNormalize",
            "params": [
                {
                    "name": "boolean",
                    "description": "set normalize to true (1) or false (0)",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "Amplitude"
        },
        {
            "file": "src/amplitude.js",
            "line": 206,
            "description": "Determines whether the results of Amplitude.process() will be Smoothed.",
            "itemtype": "method",
            "name": "smooth",
            "params": [
                {
                    "name": "set",
                    "description": "smoothing from 0.0 <= 1",
                    "type": "Number"
                }
            ],
            "class": "Amplitude"
        },
        {
            "file": "src/audioin.js",
            "line": 79,
            "description": "Returns a list of available input sources.",
            "itemtype": "method",
            "name": "listSources",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "AudioIn"
        },
        {
            "file": "src/audioin.js",
            "line": 95,
            "description": "Set the input source. Accepts a number representing a\nposition in the array returned by listSources().\nThis is only supported in browsers that support \nMediaStreamTrack.getSources(). Instead, some browsers\ngive users the option to set their own media source.",
            "itemtype": "method",
            "name": "setSource",
            "params": [
                {
                    "name": "num",
                    "description": "position of input source in the array",
                    "type": "Number"
                }
            ],
            "class": "AudioIn"
        },
        {
            "file": "src/audioin.js",
            "line": 123,
            "description": "<p>Read the Amplitude (volume level) of an AudioIn. The AudioIn\nclass contains its own instance of the Amplitude class to help\nmake it easy to get a microphone's volume level.</p>\n\n<p>Accepts an optional smoothing value (0.0 < 1.0).</p>\n\n<p>AudioIn must .start() before using .getLevel().</p>",
            "itemtype": "method",
            "name": "getLevel",
            "params": [
                {
                    "name": "smoothing",
                    "description": "Smoothing is 0.0 by default.\n                             Smooths values based on previous values.",
                    "type": "[Number]"
                }
            ],
            "return": {
                "description": "Volume level (between 0.0 and 1.0)",
                "type": "Number"
            },
            "class": "AudioIn"
        },
        {
            "file": "src/audioin.js",
            "line": 144,
            "description": "Start processing audio input. This enables the use of other\nAudioIn methods like getLevel(). Note that by default, AudioIn\nis not connected to p5.sound's output. So you won't hear\nanything unless you use the connect() method.",
            "itemtype": "method",
            "name": "start",
            "class": "AudioIn"
        },
        {
            "file": "src/audioin.js",
            "line": 193,
            "description": "Turn the AudioIn off. If the AudioIn is stopped, it cannot getLevel().",
            "itemtype": "method",
            "name": "stop",
            "class": "AudioIn"
        },
        {
            "file": "src/audioin.js",
            "line": 204,
            "description": "Add input sources to the list of available sources.",
            "access": "private",
            "tagname": "",
            "class": "AudioIn"
        },
        {
            "file": "src/audioin.js",
            "line": 219,
            "description": "Set amplitude (volume) of a mic input between 0 and 1.0",
            "itemtype": "method",
            "name": "amp",
            "params": [
                {
                    "name": "vol",
                    "description": "between 0 and 1.0",
                    "type": "Number"
                },
                {
                    "name": "time",
                    "description": "ramp time (optional)",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "AudioIn"
        },
        {
            "file": "src/env.js",
            "line": 30,
            "itemtype": "property",
            "name": "attackTime",
            "class": "Env"
        },
        {
            "file": "src/env.js",
            "line": 34,
            "itemtype": "property",
            "name": "attackLevel",
            "class": "Env"
        },
        {
            "file": "src/env.js",
            "line": 38,
            "itemtype": "property",
            "name": "decayTime",
            "class": "Env"
        },
        {
            "file": "src/env.js",
            "line": 42,
            "itemtype": "property",
            "name": "sustainTime",
            "class": "Env"
        },
        {
            "file": "src/env.js",
            "line": 46,
            "itemtype": "property",
            "name": "sustainLevel",
            "class": "Env"
        },
        {
            "file": "src/env.js",
            "line": 50,
            "description": "Time between level = sustainLevel and level = releaseLevel (or 0)",
            "itemtype": "property",
            "name": "releaseTime",
            "class": "Env"
        },
        {
            "file": "src/env.js",
            "line": 55,
            "description": "Release level defaults to 0 (silence)",
            "itemtype": "property",
            "name": "releaseLevel",
            "class": "Env"
        },
        {
            "file": "src/env.js",
            "line": 64,
            "params": [
                {
                    "name": "input",
                    "description": "A p5Sound object or\n                              Web Audio Param",
                    "type": "Object"
                }
            ],
            "class": "Env"
        },
        {
            "file": "src/env.js",
            "line": 76,
            "description": "Play tells the envelope to start acting on a given input.\nIf the input is a p5Sound object (i.e. AudioIn, Oscillator,\nSoundFile), then Env will control its output volume.\nEnvelopes can also be used to control any Web Audio Param.",
            "params": [
                {
                    "name": "input",
                    "description": "A p5Sound object or\n                              Web Audio Param",
                    "type": "Object"
                }
            ],
            "class": "Env"
        },
        {
            "file": "src/fft.js",
            "line": 36,
            "description": "Set the input source for the FFT analysis. If no source is\nprovided, FFT will analyze all sound in the sketch.",
            "params": [
                {
                    "name": "source",
                    "description": "p5.sound object (or web audio API source node)",
                    "type": "[Object]"
                },
                {
                    "name": "bands",
                    "description": "Must be a power of two between 16 and 1024",
                    "type": "[Number]"
                }
            ],
            "class": "FFT"
        },
        {
            "file": "src/fft.js",
            "line": 55,
            "description": "<p>This method tells the FFT to processes the frequency spectrum.</p>\n \n<p>Returns an array of amplitude values between -140 and 0. The array\nstarts with the lowest pitched frequencies, and ends with the \nhighest.</p>\n\n<p>Length will be equal to fft bands (default: 1024).</p>",
            "itemtype": "method",
            "name": "analyze",
            "params": [
                {
                    "name": "bands",
                    "description": "Must be a power of two between\n                           16 and 1024. Defaults to 512.",
                    "type": "[Number]"
                }
            ],
            "return": {
                "description": "spectrum    Array of amplitude values across\n                                 the frequency spectrum.",
                "type": "Float32Array"
            },
            "class": "FFT"
        },
        {
            "file": "src/fft.js",
            "line": 81,
            "description": "Returns an array of amplitude values (between 0-255) that represent\na snapshot of amplitude readings in a single buffer.\n \nLength will be 1/2 size of FFT buffer (default is 2048 / 1024).\n\nCan be used to draw the waveform of a sound.",
            "itemtype": "method",
            "name": "waveform",
            "return": {
                "description": "Array of amplitude values (0-255) over time. Length will be 1/2 fftBands.",
                "type": "Uint8Array"
            },
            "class": "FFT"
        },
        {
            "file": "src/fft.js",
            "line": 98,
            "description": "Smooth FFT analysis by averaging with the last analysis frame.",
            "params": [
                {
                    "name": "smoothing",
                    "description": "0.0 < smoothing < 1.0.\n                             Defaults to 0.8.",
                    "type": "Number"
                }
            ],
            "class": "FFT"
        },
        {
            "file": "src/fft.js",
            "line": 108,
            "description": "<p>Returns the amount of energy (volume) at a specific\nfrequency, or the average amount of energy between two\ngiven frequencies.</p>\n\n<p>analyze() must be called prior to getFreq().\nAnalyze() tells the FFT to analyze frequency data, and\ngetFreq() uses the results determine the value at\na specific frequency or range of frequencies.</p>",
            "itemtype": "method",
            "name": "getFreq",
            "params": [
                {
                    "name": "frequency1",
                    "description": "Will return a value representing\n                              energy at this frequency.",
                    "type": "Number"
                },
                {
                    "name": "frequency2",
                    "description": "If a second frequency is given,\n                              will return average amount of\n                              energy that exists between the\n                              two frequencies.",
                    "type": "[Number]"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "FFT"
        },
        {
            "file": "src/helpers.js",
            "line": 7,
            "description": "<p>Set the master amplitude (volume) for sound in this sketch.</p>\n\n<p>Note that values greater than 1.0 may lead to digital distortion.</p>\n \n<p><b>How This Works</b>: When you load the p5Sound module, it\ncreates a single instance of p5sound. All sound objects in this\nmodule output to p5sound before reaching your computer's output.\nSo if you change the amplitude of p5sound, it impacts all of the\nsound in this module.</p>",
            "itemtype": "method",
            "name": "masterVolume",
            "params": [
                {
                    "name": "volume",
                    "description": "Master amplitude (volume) for sound in\n                         this sketch. Should be between 0.0\n                         (silence) and 1.0. Values greater than\n                         1.0 may lead to digital distortion.",
                    "type": "Number"
                }
            ],
            "example": [
                "\n<div><code>\nmasterVolume(.5);\n</code></div>\n "
            ],
            "class": "Pulse"
        },
        {
            "file": "src/helpers.js",
            "line": 34,
            "description": "Returns a number representing the sample rate, in samples per second,\nof all sound objects in this audio context. It is determined by the\nsampling rate of your operating system's sound card, and it is not\ncurrently possile to change.\nIt is often 44100, or twice the range of human hearing.",
            "itemtype": "method",
            "name": "sampleRate",
            "return": {
                "description": "samplerate samples per second",
                "type": "Number"
            },
            "class": "Pulse"
        },
        {
            "file": "src/helpers.js",
            "line": 53,
            "description": "Returns the closest MIDI note value for\na given frequency.",
            "params": [
                {
                    "name": "frequency",
                    "description": "A freqeuncy, for example, the \"A\"\n                           above Middle C is 440Hz",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "MIDI note value",
                "type": "Number"
            },
            "class": "Pulse"
        },
        {
            "file": "src/helpers.js",
            "line": 68,
            "description": "Returns the frequency value of a MIDI note.",
            "params": [
                {
                    "name": "midiNote",
                    "description": "The number of a midi note,\n                          where Middle C = 60.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Frequency value of the given MIDI note",
                "type": "Number"
            },
            "class": "Pulse"
        },
        {
            "file": "src/lfo.js",
            "line": 44,
            "description": "Frequency Modulation (FM): Modulate the frequency\nof another signal with the frequency of this LFO.\nPass in the oscillator whose frequency you want to\nmodulate.",
            "itemtype": "method",
            "name": "freqMod",
            "params": [
                {
                    "name": "oscillator",
                    "description": "The oscillator whose frequency will\n                            be modulated.",
                    "type": "Object"
                }
            ],
            "class": "Pulse"
        },
        {
            "file": "src/lfo.js",
            "line": 73,
            "description": "Amplitude Modulation (AM): Modulate the amplitude\nof another signal with the frequency of this LFO.\nPass in the oscillator whose amplitude you want to\nmodulate.",
            "itemtype": "method",
            "name": "ampMod",
            "params": [
                {
                    "name": "oscillator",
                    "description": "The oscillator whose amplitude will\n                            be modulated.",
                    "type": "Object"
                }
            ],
            "class": "Pulse"
        },
        {
            "file": "src/master.js",
            "line": 14,
            "description": "Master contains AudioContext and the master sound output.",
            "class": "p5.sound",
            "module": "p5.sound",
            "submodule": "p5.sound"
        },
        {
            "file": "src/noise.js",
            "line": 120,
            "description": "Set type of noise to 'white', 'pink' or 'brown'.\nWhite is the default.",
            "params": [
                {
                    "name": "type",
                    "description": "'white', 'pink' or 'brown'",
                    "type": "[String]"
                }
            ],
            "class": "Noise",
            "module": "p5.sound"
        },
        {
            "file": "src/oscillator.js",
            "line": 69,
            "description": "Start an oscillator. Accepts an optional parameter to\ndetermine how long (in seconds from now) until the\noscillator starts.",
            "itemtype": "method",
            "name": "start",
            "params": [
                {
                    "name": "time",
                    "description": "startTime in seconds from now.",
                    "type": "[Number]"
                },
                {
                    "name": "frequency",
                    "description": "frequency in Hz.",
                    "type": "[Number]"
                }
            ],
            "class": "Oscillator",
            "module": "p5.sound"
        },
        {
            "file": "src/oscillator.js",
            "line": 103,
            "description": "Stop an oscillator. Accepts an optional parameter\nto determine how long (in seconds from now) until the\noscillator stops.",
            "itemtype": "method",
            "name": "stop",
            "params": [
                {
                    "name": "time,",
                    "description": "in seconds from now.",
                    "type": "[Number]"
                }
            ],
            "class": "Oscillator",
            "module": "p5.sound"
        },
        {
            "file": "src/oscillator.js",
            "line": 120,
            "description": "Set amplitude (volume) of an oscillator between 0 and 1.0",
            "itemtype": "method",
            "name": "amp",
            "params": [
                {
                    "name": "vol",
                    "description": "between 0 and 1.0",
                    "type": "Number"
                },
                {
                    "name": "time",
                    "description": "schedule this event to happen seconds\n                       from now (optional)",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "Oscillator",
            "module": "p5.sound"
        },
        {
            "file": "src/oscillator.js",
            "line": 153,
            "description": "Fade to a certain volume starting now, and ending at rampTime",
            "params": [
                {
                    "name": "vol",
                    "description": "volume between 0.0 and 1.0",
                    "type": "Number"
                },
                {
                    "name": "rampTime",
                    "description": "duration of the fade (in seconds)",
                    "type": "Number"
                }
            ],
            "class": "Oscillator",
            "module": "p5.sound"
        },
        {
            "file": "src/oscillator.js",
            "line": 174,
            "description": "Set frequency of an oscillator.",
            "itemtype": "method",
            "name": "freq",
            "params": [
                {
                    "name": "Frequency",
                    "description": "Frequency in Hz",
                    "type": "Number"
                },
                {
                    "name": "rampTime",
                    "description": "Ramp time (in seconds)",
                    "type": "[Number]",
                    "optional": true
                },
                {
                    "name": "TimeFromNow",
                    "description": "Schedule this event to happen\n                                 at x seconds from now",
                    "type": "[Number]",
                    "optional": true
                }
            ],
            "example": [
                "\n<div><code>\nvar osc = new Oscillator(300);\nosc.start();\nosc.freq(40, 10);\n</code></div>"
            ],
            "class": "Oscillator",
            "module": "p5.sound"
        },
        {
            "file": "src/oscillator.js",
            "line": 288,
            "description": "Modulate any audio param.",
            "itemtype": "method",
            "name": "mod",
            "params": [
                {
                    "name": "oscillator",
                    "description": "The param to modulate",
                    "type": "Object"
                }
            ],
            "class": "Oscillator",
            "module": "p5.sound"
        },
        {
            "file": "src/oscillator.js",
            "line": 299,
            "description": "Set the phase of an oscillator between 0.0 and 1.0",
            "params": [
                {
                    "name": "phase",
                    "description": "float between 0.0 and 1.0",
                    "type": "Number"
                }
            ],
            "class": "Oscillator",
            "module": "p5.sound"
        },
        {
            "file": "src/pulse.js",
            "line": 46,
            "description": "Set the width of a Pulse object (an oscillator that implements\nPulse Width Modulation).",
            "itemtype": "method",
            "name": "width",
            "params": [
                {
                    "name": "w",
                    "description": "Width between the pulses (0 to 1.0,\n                       defaults to 0)",
                    "type": "[Number]"
                }
            ],
            "class": "Pulse",
            "module": "p5.sound"
        },
        {
            "file": "src/sndcore.js",
            "line": 13,
            "description": "Web Audio SHIMS and helper functions to ensure compatability across browsers",
            "class": "p5.sound",
            "module": "p5.sound",
            "submodule": "p5.sound"
        },
        {
            "file": "src/sndcore.js",
            "line": 23,
            "description": "<p>Returns the Audio Context for this sketch. Useful for users\nwho would like to dig deeper into the <a target='_blank' href=\n'http://webaudio.github.io/web-audio-api/'>Web Audio API\n</a>.</p>",
            "itemtype": "method",
            "name": "getAudioContext",
            "return": {
                "description": "AudioContext for this sketch",
                "type": "Object"
            },
            "class": "p5.sound",
            "module": "p5.sound",
            "submodule": "p5.sound"
        },
        {
            "file": "src/sndcore.js",
            "line": 64,
            "description": "Determine which filetypes are supported (inspired by buzz.js)\nThe audio element (el) will only be used to test browser support for various audio formats",
            "class": "p5.sound",
            "module": "p5.sound",
            "submodule": "p5.sound"
        },
        {
            "file": "src/soundfile.js",
            "line": 155,
            "description": "<p>This is a helper function that the SoundFile calls to load\nitself. Accepts a callback (the name of another function)\nas an optional parameter.</p>",
            "itemtype": "method",
            "name": "load",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "callback",
                    "description": "Name of a function to call once file loads",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "SoundFile",
            "module": "p5.sound"
        },
        {
            "file": "src/soundfile.js",
            "line": 189,
            "description": "Returns true if the sound file has finished loading.",
            "itemtype": "method",
            "name": "isLoaded",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "SoundFile",
            "module": "p5.sound"
        },
        {
            "file": "src/soundfile.js",
            "line": 203,
            "description": "Play the SoundFile",
            "itemtype": "method",
            "name": "play",
            "params": [
                {
                    "name": "rate",
                    "description": "(optional) playback rate",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "amp",
                    "description": "(optional) amplitude (volume)\n                                    of playback",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "startTime",
                    "description": "(optional) startTime in seconds",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "endTime",
                    "description": "(optional) endTime in seconds",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "SoundFile",
            "module": "p5.sound"
        },
        {
            "file": "src/soundfile.js",
            "line": 297,
            "description": "SoundFile has two play modes: <code>restart</code> and\n<code>sustain</code>. Play Mode determines what happens to a\nSoundFile if it is triggered while in the middle of playback.\nIn sustain, the existing playback will continue. In restart\n.play() will stop playback and start over. Sustain is the\ndefault mode.",
            "itemtype": "method",
            "name": "playMode",
            "params": [
                {
                    "name": "str",
                    "description": "'restart' or 'sustain'",
                    "type": "String"
                }
            ],
            "class": "SoundFile",
            "module": "p5.sound"
        },
        {
            "file": "src/soundfile.js",
            "line": 326,
            "description": "Toggle whether a sound file is playing or paused.\n\nPauses a file that is currently playing,\nand unpauses (plays) a file that is currently paused.\n\nThe pauseTime and loop state are preserved\nso playback can resume from the same spot in the sound file.",
            "itemtype": "method",
            "name": "pause",
            "class": "SoundFile",
            "module": "p5.sound"
        },
        {
            "file": "src/soundfile.js",
            "line": 364,
            "description": "Loop the SoundFile. Accepts optional parameters to set the\nplayback rate, playback volume, loopStart, loopEnd.",
            "itemtype": "method",
            "name": "loop",
            "params": [
                {
                    "name": "rate",
                    "description": "(optional) playback rate",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "amp",
                    "description": "(optional) playback volume",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "loopStart",
                    "description": "(optional) startTime in seconds",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "loopEnd",
                    "description": "(optional) endTime in seconds",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "SoundFile",
            "module": "p5.sound"
        },
        {
            "file": "src/soundfile.js",
            "line": 379,
            "description": "Set a SoundFile's looping flag to true or false. If the sound\nis currently playing, this change will take effect when it\nreaches the end of the current playback.",
            "itemtype": "method",
            "name": "setLoop",
            "params": [
                {
                    "name": "Boolean",
                    "description": "set looping to true or false",
                    "type": "Boolean"
                }
            ],
            "class": "SoundFile",
            "module": "p5.sound"
        },
        {
            "file": "src/soundfile.js",
            "line": 402,
            "description": "Returns 'true' if a SoundFile is looping, 'false' if not.",
            "itemtype": "method",
            "name": "isLooping",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "SoundFile",
            "module": "p5.sound"
        },
        {
            "file": "src/soundfile.js",
            "line": 418,
            "description": "Returns 'true' if a SoundFile is playing, 'false' if not.",
            "itemtype": "method",
            "name": "isPlaying",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "SoundFile",
            "module": "p5.sound"
        },
        {
            "file": "src/soundfile.js",
            "line": 428,
            "description": "Returns true if a SoundFile is paused, 'false' if not.",
            "itemtype": "method",
            "name": "isPaused",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "SoundFile",
            "module": "p5.sound"
        },
        {
            "file": "src/soundfile.js",
            "line": 441,
            "description": "Stop soundfile playback.",
            "itemtype": "method",
            "name": "stop",
            "class": "SoundFile",
            "module": "p5.sound"
        },
        {
            "file": "src/soundfile.js",
            "line": 454,
            "description": "Stop playback on all of this soundfile's sources.\nThis may soon be replaced by different playModes for the player.",
            "itemtype": "method",
            "name": "stopAll",
            "class": "SoundFile",
            "module": "p5.sound"
        },
        {
            "file": "src/soundfile.js",
            "line": 471,
            "description": "Set the playback rate of a sound file. Will change the speed and the pitch.\nValues less than zero will reverse the audio buffer before playback.",
            "itemtype": "method",
            "name": "rate",
            "params": [
                {
                    "name": "playbackRate",
                    "description": "Set the playback rate. 1.0 is normal,\n                                   .5 is half-speed, 2.0 is twice as fast.\n                                   Must be greater than zero.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "SoundFile",
            "module": "p5.sound"
        },
        {
            "file": "src/soundfile.js",
            "line": 504,
            "description": "Return the number of channels in a sound file.\nFor example, Mono = 1, Stereo = 2.",
            "itemtype": "method",
            "name": "channels",
            "return": {
                "description": "[channels]",
                "type": "Number"
            },
            "class": "SoundFile",
            "module": "p5.sound"
        },
        {
            "file": "src/soundfile.js",
            "line": 515,
            "description": "Return the sample rate of the sound file.",
            "itemtype": "method",
            "name": "sampleRate",
            "return": {
                "description": "[sampleRate]",
                "type": "Number"
            },
            "class": "SoundFile",
            "module": "p5.sound"
        },
        {
            "file": "src/soundfile.js",
            "line": 525,
            "description": "Return the number of samples in a sound file.\nEqual to sampleRate * duration.",
            "itemtype": "method",
            "name": "frames",
            "return": {
                "description": "[sampleCount]",
                "type": "Number"
            },
            "class": "SoundFile",
            "module": "p5.sound"
        },
        {
            "file": "src/soundfile.js",
            "line": 536,
            "description": "Returns the duration of a sound file.",
            "itemtype": "method",
            "name": "duration",
            "return": {
                "description": "The duration of the soundFile in seconds.",
                "type": "Number"
            },
            "class": "SoundFile",
            "module": "p5.sound"
        },
        {
            "file": "src/soundfile.js",
            "line": 551,
            "description": "Return the current position of the playhead in the song, in seconds",
            "itemtype": "method",
            "name": "currentTime",
            "return": {
                "description": "currentTime of the soundFile in seconds.",
                "type": "Number"
            },
            "class": "SoundFile",
            "module": "p5.sound"
        },
        {
            "file": "src/soundfile.js",
            "line": 576,
            "description": "Move the playhead of the song to a position, in seconds. Start\nand Stop time. If none are given, will reset the file to play\nentire duration from start to finish.",
            "itemtype": "method",
            "name": "jump",
            "params": [
                {
                    "name": "cueTime",
                    "description": "cueTime of the soundFile in seconds.",
                    "type": "Number"
                },
                {
                    "name": "endTime",
                    "description": "endTime of the soundFile in seconds.",
                    "type": "Number"
                }
            ],
            "class": "SoundFile",
            "module": "p5.sound"
        },
        {
            "file": "src/soundfile.js",
            "line": 607,
            "description": "Returns an array of amplitude peaks in a SoundFile that can be\nused to draw a static waveform. Scans through the SoundFile's\naudio buffer to find the greatest amplitudes. Accepts one\nparameter, 'length', which determines size of the array.\nLarger arrays result in more precise waveform visualizations.\n\nInspired by Wavesurfer.js.",
            "itemtype": "method",
            "name": "getPeaks",
            "params": [
                {
                    "name": "length",
                    "description": "length is the size of the returned array.\n                         Larger length results in more precision.\n                         Defaults to 5*width of the browser window.",
                    "type": "[Number]"
                }
            ],
            "return": {
                "description": "Array of peaks.",
                "type": "Float32Array"
            },
            "class": "SoundFile",
            "module": "p5.sound"
        },
        {
            "file": "src/soundfile.js",
            "line": 664,
            "description": "Reverses the SoundFile's buffer source.\nPlayback must be handled separately (see example).",
            "itemtype": "method",
            "name": "reverseBuffer",
            "example": [
                "\n<div><code>\ns = new SoundFile('beat.mp3');\ns.reverseBuffer();\ns.play();\n</code>\n</div>"
            ],
            "class": "SoundFile",
            "module": "p5.sound"
        },
        {
            "file": "src/soundfile.js",
            "line": 696,
            "description": "Multiply the output volume (amplitude) of a sound file\nbetween 0.0 (silence) and 1.0 (full volume).\n1.0 is the maximum amplitude of a digital sound, so multiplying\nby greater than 1.0 may cause digital distortion.</p> <p>To\nfade, provide a <code>rampTime</code> parameter. For more\ncomplex fades, see the Env class.</p>",
            "itemtype": "method",
            "name": "setVolume",
            "params": [
                {
                    "name": "volume",
                    "description": "Volume (amplitude) between 0.0 and 1.0",
                    "type": "Number"
                },
                {
                    "name": "rampTime",
                    "description": "Fade for t seconds",
                    "type": "[Number]"
                },
                {
                    "name": "timeFromNow",
                    "description": "Schedule this event to happen at\n                               t seconds in the future",
                    "type": "[Number]"
                }
            ],
            "class": "SoundFile",
            "module": "p5.sound"
        },
        {
            "file": "src/soundfile.js",
            "line": 751,
            "description": "Set the stereo panning of a p5Sound object to\na floating point number between -1.0 (left) and 1.0 (right).\nDefault is 0.0 (center).",
            "itemtype": "method",
            "name": "pan",
            "params": [
                {
                    "name": "panValue",
                    "description": "Set the stereo panner",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "SoundFile",
            "module": "p5.sound"
        },
        {
            "file": "src/soundfile.js",
            "line": 772,
            "description": "Returns the current stereo pan position (-1.0 to 1.0)",
            "itemtype": "method",
            "name": "getPan",
            "return": {
                "description": "Returns the stereo pan setting of the Oscillator\n                         as a number between -1.0 (left) and 1.0 (right).\n                         0.0 is center and default.",
                "type": "Number"
            },
            "class": "SoundFile",
            "module": "p5.sound"
        },
        {
            "file": "src/soundfile.js",
            "line": 784,
            "description": "<p>Connects the output of a p5sound object to input of another\np5Sound object. For example, you may connect a SoundFile to an\nEffect.</p>\n\n<p>If no parameter is given, this object will connect\nto the master output.</p>\n\n<p>Most p5sound objects connect to the master output when they\nare created, so you can hear them without ever using this\nfunction. AudioIn is the only exception: you will not hear \nthe AudioIn unless you explicitly tell it to connect.\nThis is because connecting a microphone input through your\nspeakers can cause feedback</p>",
            "itemtype": "method",
            "name": "connect",
            "params": [
                {
                    "name": "p5Sound_Object",
                    "description": "p5Sound objects can connect (send their\n                                 output) to other p5Sound objects",
                    "type": "[object]"
                }
            ],
            "class": "SoundFile",
            "module": "p5.sound"
        },
        {
            "file": "src/soundfile.js",
            "line": 816,
            "description": "Disconnects the output of this p5sound object.",
            "itemtype": "method",
            "name": "disconnect",
            "class": "SoundFile",
            "module": "p5.sound"
        },
        {
            "file": "src/soundfile.js",
            "line": 829,
            "description": "<p>loadSound() should be used if you want to create a SoundFile \nduring preload. It returns a new SoundFile from a specified\npath, or an array of paths. If used outside of preload, it \naccepts a callback as the second parameter.</p>\n<p>Using a <a href=\n\"https://github.com/lmccart/p5.js/wiki/Local-server\">\nlocal server</a> is recommended when loading external files.</p>",
            "itemtype": "method",
            "name": "loadSound",
            "params": [
                {
                    "name": "path",
                    "description": "Path to the sound file, or an array with\n                                  paths to soundfiles in multiple formats\n                                  i.e. ['sound.ogg', 'sound.mp3']",
                    "type": "String/Array"
                },
                {
                    "name": "callback",
                    "description": "Name of a function to call once file loads",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns a SoundFile",
                "type": "SoundFile"
            },
            "example": [
                " \n<div><code>\nfunction preload() {\n  mySound = loadSound(['mySound.mp3', 'mySound.ogg']);\n}\n\nfunction setup() {\n  mySound.loop();\n}\n</code></div>"
            ],
            "class": "SoundFile",
            "module": "p5.sound"
        },
        {
            "file": "src/soundfile.js",
            "line": 865,
            "description": "List the SoundFile formats that you will include. LoadSound \nwill search your directory for these extensions, and will pick\na format that is compatable with the user's web browser.",
            "params": [
                {
                    "name": "format(s)",
                    "description": "i.e. 'mp3', 'wav', 'ogg'",
                    "type": "String"
                }
            ],
            "example": [
                "\n<div><code>\nfunction preload() {\n  // set the global sound formats\n  soundFormats('mp3, 'ogg');\n  \n  // load either beatbox.mp3, or .ogg, depending on browser\n  mySound = new SoundFile('beatbox');\n}\n\nfunction onload() {\n  mySound.play();\n}\n</code></div>"
            ],
            "class": "SoundFile",
            "module": "p5.sound"
        },
        {
            "file": "src/soundfile.js",
            "line": 900,
            "description": "<p>Read the Amplitude (volume level) of a SoundFile. The\nSoundFile class contains its own instance of the Amplitude\nclass to help make it easy to get a microphone's volume level.</p>\n\n<p>Accepts an optional smoothing value (0.0 < 1.0).</p>",
            "itemtype": "method",
            "name": "getLevel",
            "params": [
                {
                    "name": "smoothing",
                    "description": "Smoothing is 0.0 by default.\n                             Smooths values based on previous values.",
                    "type": "[Number]"
                }
            ],
            "return": {
                "description": "Volume level (between 0.0 and 1.0)",
                "type": "Number"
            },
            "class": "SoundFile",
            "module": "p5.sound"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 19,
            "description": "Searches the page for an element with given ID and returns it as\na p5.Element. The DOM node itself can be accessed with .elt.\nReturns null if none found.",
            "itemtype": "method",
            "name": "getElement",
            "params": [
                {
                    "name": "id",
                    "description": "id of element to search for",
                    "type": "String"
                }
            ],
            "return": {
                "description": "p5.Element containing node found",
                "type": "Object/p5.Element|Null"
            },
            "class": "p5.dom",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 37,
            "description": "Searches the page for elements with given class and returns an\narray of p5.Elements. The DOM nodes themselves can be accessed\nwith .elt. Returns an empty array if none found.",
            "itemtype": "method",
            "name": "getElements",
            "params": [
                {
                    "name": "class",
                    "description": "class name of elements to search for",
                    "type": "String"
                }
            ],
            "return": {
                "description": "array of p5.Element wrapped nodes found",
                "type": "Array"
            },
            "class": "p5.dom",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 58,
            "description": "Removes all elements created by p5, except the original canvas.\nEvent handlers are removed, and element is removed from the DOM.",
            "itemtype": "method",
            "name": "removeElements",
            "class": "p5.dom",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 70,
            "description": "Helpers for create methods.",
            "class": "p5.dom",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 81,
            "description": "Creates a &lt;div&gt;&lt;/div&gt; element in the DOM with given inner HTML.\nAppends to the container node if one is specified, otherwise \nappends to body.",
            "itemtype": "method",
            "name": "createDiv",
            "params": [
                {
                    "name": "html",
                    "description": "inner HTML for element created",
                    "type": "String"
                }
            ],
            "return": {
                "description": "pointer to p5.Element holding created\n                          node",
                "type": "Object/p5.Element"
            },
            "class": "p5.dom",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 92,
            "description": "Creates a &lt;p&gt;&lt;/p&gt; element in the DOM with given inner HTML. Used\nfor paragraph length text.\nAppends to the container node if one is specified, otherwise \nappends to body.",
            "itemtype": "method",
            "name": "createP",
            "params": [
                {
                    "name": "html",
                    "description": "inner HTML for element created",
                    "type": "String"
                }
            ],
            "return": {
                "description": "pointer to p5.Element holding created\n                          node",
                "type": "Object/p5.Element"
            },
            "class": "p5.dom",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 104,
            "description": "Creates a &lt;span&gt;&lt;/span&gt; element in the DOM with given inner HTML.\nAppends to the container node if one is specified, otherwise \nappends to body.",
            "itemtype": "method",
            "name": "createSpan",
            "params": [
                {
                    "name": "html",
                    "description": "inner HTML for element created",
                    "type": "String"
                }
            ],
            "return": {
                "description": "pointer to p5.Element holding created\n                          node",
                "type": "Object/p5.Element"
            },
            "class": "p5.dom",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 124,
            "description": "Creates an &lt;img /&gt; element in the DOM with given src and\nalternate text. \nAppends to the container node if one is specified, otherwise \nappends to body.",
            "itemtype": "method",
            "name": "createImg",
            "params": [
                {
                    "name": "src",
                    "description": "src path or url for image",
                    "type": "String"
                },
                {
                    "name": "alt",
                    "description": "alternate text to be used if image does not\n                 load",
                    "type": "String"
                }
            ],
            "return": {
                "description": "pointer to p5.Element holding created\n                          node",
                "type": "Object/p5.Element"
            },
            "class": "p5.dom",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 147,
            "description": "Creates an &lt;a&gt;&lt;/a&gt; element in the DOM for including a hyperlink.\nAppends to the container node if one is specified, otherwise \nappends to body.",
            "itemtype": "method",
            "name": "createA",
            "params": [
                {
                    "name": "href",
                    "description": "url of page to link to",
                    "type": "String"
                },
                {
                    "name": "html",
                    "description": "inner html of link element to display",
                    "type": "String"
                },
                {
                    "name": "target",
                    "description": "target where new link should open,\n                            could be _blank, _self, _parent, _top.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "pointer to p5.Element holding created\n                          node",
                "type": "Object/p5.Element"
            },
            "class": "p5.dom",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 168,
            "class": "p5.dom",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 171,
            "description": "Creates a slider &lt;input&gt;&lt;/input&gt; element in the DOM.\nUse .size() to set the display length of the slider.\nAppends to the container node if one is specified, otherwise \nappends to body.",
            "itemtype": "method",
            "name": "createSlider",
            "params": [
                {
                    "name": "min",
                    "description": "minimum value of the slider",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "maximum value of the slider",
                    "type": "Number"
                },
                {
                    "name": "value",
                    "description": "default value of the slider",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "pointer to p5.Element holding created\n                          node",
                "type": "Object/p5.Element"
            },
            "class": "p5.dom",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 193,
            "description": "Creates a &lt;button&gt;&lt;/button&gt; element in the DOM.\nUse .size() to set the display size of the button.\nUse .mousePressed() to specify behavior on press.\nAppends to the container node if one is specified, otherwise \nappends to body.",
            "itemtype": "method",
            "name": "createButton",
            "params": [
                {
                    "name": "label",
                    "description": "label displayed on the button",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "value of the button",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "pointer to p5.Element holding created\n                          node",
                "type": "Object/p5.Element"
            },
            "class": "p5.dom",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 214,
            "description": "Creates an &lt;input&gt;&lt;/input&gt; element in the DOM for text input.\nUse .size() to set the display length of the box.\nAppends to the container node if one is specified, otherwise \nappends to body.",
            "itemtype": "method",
            "name": "createInput",
            "params": [
                {
                    "name": "value",
                    "description": "default value of the input box",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "pointer to p5.Element holding created\n                          node",
                "type": "Object/p5.Element"
            },
            "class": "p5.dom",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 232,
            "class": "p5.dom",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 234,
            "description": "Creates an HTML5 &lt;video&gt; element in the DOM for simple playback\nof audio/video. Shown by default, can be hidden with .hide()\nand drawn into canvas using video(). Appends to the container\nnode if one is specified, otherwise appends to body.",
            "itemtype": "method",
            "name": "createVideo",
            "params": [
                {
                    "name": "src",
                    "description": "path to a video file, or array of paths for\n                            supporting different browsers",
                    "type": "String|Array"
                },
                {
                    "name": "callback",
                    "description": "callback function to be called upon \n                            'canplaythrough' event fire, that is, when the\n                            browser can play the media, and estimates that \n                            enough data has been loaded to play the media \n                            up to its end without having to stop for \n                            further buffering of content",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "pointer to video p5.Element",
                "type": "Object/p5.Element"
            },
            "class": "p5.dom",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 299,
            "class": "p5.dom",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 301,
            "description": "Creates a hidden HTML5 &lt;audio&gt; element in the DOM for simple audio \nplayback. Appends to the container node if one is specified, \notherwise appends to body.",
            "itemtype": "method",
            "name": "createAudio",
            "params": [
                {
                    "name": "src",
                    "description": "path to an audio file, or array of paths for\n                            supporting different browsers",
                    "type": "String|Array"
                },
                {
                    "name": "callback",
                    "description": "callback function to be called upon \n                            'canplaythrough' event fire, that is, when the\n                            browser can play the media, and estimates that \n                            enough data has been loaded to play the media \n                            up to its end without having to stop for \n                            further buffering of content",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "pointer to audio p5.Element",
                "type": "Object/p5.Element"
            },
            "class": "p5.dom",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 323,
            "class": "p5.dom",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 333,
            "description": "Creates a new &lt;video&gt; element that contains the audio/video feed\nfrom a webcam. This can be drawn onto the canvas using video().",
            "itemtype": "method",
            "name": "createCapture",
            "params": [
                {
                    "name": "type",
                    "description": "type of capture, either VIDEO or \n                            AUDIO if none specified, default both",
                    "type": "String/Constant"
                }
            ],
            "return": {
                "description": "capture video p5.Element",
                "type": "Object/p5.Element"
            },
            "class": "p5.dom",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 366,
            "description": "Creates element with given tag in the DOM with given content.\nAppends to the container node if one is specified, otherwise \nappends to body.",
            "itemtype": "method",
            "name": "createElement",
            "params": [
                {
                    "name": "tag",
                    "description": "tag for the new element",
                    "type": "String"
                },
                {
                    "name": "content",
                    "description": "html content to be inserted into the element",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "pointer to p5.Element holding created\n                          node",
                "type": "Object/p5.Element"
            },
            "class": "p5.dom",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 389,
            "description": "Adds specified class to the element.",
            "itemtype": "method",
            "name": "addClass",
            "params": [
                {
                    "name": "class",
                    "description": "name of class to add",
                    "type": "String"
                }
            ],
            "class": "p5.dom",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 408,
            "description": "Removes specified class from the element.",
            "itemtype": "method",
            "name": "removeClass",
            "params": [
                {
                    "name": "class",
                    "description": "name of class to remove",
                    "type": "String"
                }
            ],
            "class": "p5.dom",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 421,
            "description": "Attaches the element to the parent specified. A way of setting\n the container for the element. Accepts either a string ID or\n DOM node.",
            "itemtype": "method",
            "name": "child",
            "params": [
                {
                    "name": "child",
                    "description": "the ID or node to add to the current element",
                    "type": "String|Object"
                }
            ],
            "class": "p5.dom",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 438,
            "description": "Sets the inner HTML of the element. Replaces any existing html.",
            "itemtype": "method",
            "name": "html",
            "params": [
                {
                    "name": "html",
                    "description": "the HTML to be placed inside the element",
                    "type": "String"
                }
            ],
            "class": "p5.Element",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 450,
            "description": "Sets the position of the element relative to (0, 0) of the\n window. Essentially, sets position:absolute and left and top\n properties of style.",
            "itemtype": "method",
            "name": "position",
            "params": [
                {
                    "name": "x",
                    "description": "x-position relative to upper left of window",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "y-position relative to upper left of window",
                    "type": "Number"
                }
            ],
            "class": "p5.Element",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 466,
            "description": "Sets the given style (css) property of the element with the given value.\n If no value is specified, returns the value of the given property, \n or undefined if the property is not.",
            "itemtype": "method",
            "name": "style",
            "params": [
                {
                    "name": "property",
                    "description": "property to be set",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "value to assign to property",
                    "type": "String"
                }
            ],
            "return": {
                "description": "value of property, if no value is specified",
                "type": "String"
            },
            "class": "p5.Element",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 486,
            "description": "Adds a new attribute or changes the value of an existing attribute \n on the specified element. If no value is specified, returns the\n value of the given attribute, or null if attribute is not set.",
            "itemtype": "method",
            "name": "attribute",
            "params": [
                {
                    "name": "attr",
                    "description": "attribute to set",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "value to assign to attribute",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "value of attribute, if no value is specified",
                "type": "String"
            },
            "class": "p5.Element",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 506,
            "description": "Either returns the value of the element if no arguments\ngiven, or sets the value of the element.",
            "itemtype": "method",
            "name": "value",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "String|Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "String|Number"
            },
            "class": "p5.Element",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 525,
            "description": "Shows the current element. Essentially, setting display:block for the style.",
            "itemtype": "method",
            "name": "show",
            "class": "p5.Element",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 535,
            "description": "Hides the current element. Essentially, setting display:none for the style.",
            "itemtype": "method",
            "name": "hide",
            "class": "p5.Element",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 544,
            "description": "Sets the width and height of the element. AUTO can be used to\n only adjust one dimension.",
            "itemtype": "method",
            "name": "size",
            "params": [
                {
                    "name": "w",
                    "description": "width of the element",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "height of the element",
                    "type": "Number"
                }
            ],
            "class": "p5.Element",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 584,
            "description": "Removes the element and deregisters all listeners.",
            "itemtype": "method",
            "name": "remove",
            "class": "p5.Element",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 621,
            "description": "Play an HTML5 media element.",
            "itemtype": "method",
            "name": "play",
            "class": "p5.MediaElement",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 633,
            "description": "Stops an HTML5 media element (sets current time to zero).",
            "itemtype": "method",
            "name": "stop",
            "class": "p5.MediaElement",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 643,
            "description": "Pauses an HTML5 media element.",
            "itemtype": "method",
            "name": "pause",
            "class": "p5.MediaElement",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 652,
            "description": "Set 'loop' to true for an HTML5 media element, and starts playing.",
            "itemtype": "method",
            "name": "loop",
            "class": "p5.MediaElement",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 661,
            "description": "Set 'loop' to false for an HTML5 media element. Element will stop\nwhen it reaches the end.",
            "itemtype": "method",
            "name": "noLoop",
            "class": "p5.MediaElement",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 672,
            "description": "Set HTML5 media element to autoplay or not.",
            "itemtype": "method",
            "name": "autoplay",
            "params": [
                {
                    "name": "autoplay",
                    "description": "whether the element should autoplay",
                    "type": "Boolean"
                }
            ],
            "class": "p5.MediaElement",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 682,
            "description": "Sets volume for this HTML5 media element. If no argument is given,\nreturns the current volume;",
            "params": [
                {
                    "name": "val",
                    "description": "volume between 0.0 and 1.0",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "current volume",
                "type": "Number"
            },
            "itemtype": "method",
            "name": "volume",
            "class": "p5.MediaElement",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 698,
            "description": "If no arguments are given, returns the current time of the elmeent.\nIf an argument is given the current time of the element is set to it.",
            "itemtype": "method",
            "name": "time",
            "params": [
                {
                    "name": "time",
                    "description": "time to jump to (in seconds)",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "current time (in seconds)",
                "type": "Number"
            },
            "class": "p5.MediaElement",
            "module": "p5.dom",
            "submodule": "p5.dom"
        },
        {
            "file": "lib/addons/p5.dom.js",
            "line": 714,
            "description": "Returns the duration of the HTML5 media element.",
            "itemtype": "method",
            "name": "duration",
            "return": {
                "description": "duration",
                "type": "Number"
            },
            "class": "p5.MediaElement",
            "module": "p5.dom",
            "submodule": "p5.dom"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src/soundfile.js:607"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/soundfile.js:607"
        },
        {
            "message": "Missing item type\nAdd input sources to the list of available sources.",
            "line": " src/audioin.js:204"
        },
        {
            "message": "Missing item type",
            "line": " src/env.js:64"
        },
        {
            "message": "Missing item type\nPlay tells the envelope to start acting on a given input.\nIf the input is a p5Sound object (i.e. AudioIn, Oscillator,\nSoundFile), then Env will control its output volume.\nEnvelopes can also be used to control any Web Audio Param.",
            "line": " src/env.js:76"
        },
        {
            "message": "Missing item type\nSet the input source for the FFT analysis. If no source is\nprovided, FFT will analyze all sound in the sketch.",
            "line": " src/fft.js:36"
        },
        {
            "message": "Missing item type\nSmooth FFT analysis by averaging with the last analysis frame.",
            "line": " src/fft.js:98"
        },
        {
            "message": "Missing item type\nReturns the closest MIDI note value for\na given frequency.",
            "line": " src/helpers.js:53"
        },
        {
            "message": "Missing item type\nReturns the frequency value of a MIDI note.",
            "line": " src/helpers.js:68"
        },
        {
            "message": "Missing item type\nMaster contains AudioContext and the master sound output.",
            "line": " src/master.js:14"
        },
        {
            "message": "Missing item type\nSet type of noise to 'white', 'pink' or 'brown'.\nWhite is the default.",
            "line": " src/noise.js:120"
        },
        {
            "message": "Missing item type\nFade to a certain volume starting now, and ending at rampTime",
            "line": " src/oscillator.js:153"
        },
        {
            "message": "Missing item type\nSet the phase of an oscillator between 0.0 and 1.0",
            "line": " src/oscillator.js:299"
        },
        {
            "message": "Missing item type\nWeb Audio SHIMS and helper functions to ensure compatability across browsers",
            "line": " src/sndcore.js:13"
        },
        {
            "message": "Missing item type\nDetermine which filetypes are supported (inspired by buzz.js)\nThe audio element (el) will only be used to test browser support for various audio formats",
            "line": " src/sndcore.js:64"
        },
        {
            "message": "Missing item type\nList the SoundFile formats that you will include. LoadSound \nwill search your directory for these extensions, and will pick\na format that is compatable with the user's web browser.",
            "line": " src/soundfile.js:865"
        },
        {
            "message": "Missing item type\nHelpers for create methods.",
            "line": " lib/addons/p5.dom.js:70"
        },
        {
            "message": "Missing item type",
            "line": " lib/addons/p5.dom.js:168"
        },
        {
            "message": "Missing item type",
            "line": " lib/addons/p5.dom.js:232"
        },
        {
            "message": "Missing item type",
            "line": " lib/addons/p5.dom.js:299"
        },
        {
            "message": "Missing item type",
            "line": " lib/addons/p5.dom.js:323"
        }
    ]
}